(* This file is automatically generated. Please don't edit it. *)

open Ocamlbuild_plugin;;
open Command;;
open Arch;;
open Format;;

let our_pp_options = [ ];;
let our_compile_options = [ A "-thread"; A "-g"; A "-w"; A "x"; ];;
let our_byte_compile_options = [ ];;
let our_native_compile_options = [ ];;
let our_include_options = [ A "-I"; A "/home/john/.opam/3.12.1/lib/ocaml"; A "-I"; A "/home/john/.opam/3.12.1/lib/ocaml/camlp4"; A "-I"; A "/home/john/.opam/3.12.1/lib/ocaml/threads"; A "-I"; A "/home/john/.opam/3.12.1/lib/camlp4"; A "-I"; A "/home/john/.opam/3.12.1/lib/threads"; A "-I"; A "/home/john/.opam/3.12.1/lib/lablgtk2"; A "-I"; A "/home/john/.opam/3.12.1/lib/ocamlbricks"; ];;
let our_c_modules = [ ];;
let our_byte_link_options = our_include_options @ [ A "unix.cma"; A "threads.cma"; A "str.cma"; A "lablgtk.cma"; A "ocamlbricks.cma"; ];;
let our_native_link_options = our_include_options @ [ A "unix.cmxa"; A "threads.cmxa"; A "str.cmxa"; A "lablgtk.cmxa"; A "ocamlbricks.cmxa"; ];;

dispatch (function After_rules ->
  flag ["ocaml"; "compile"; "ourincludesettings"]
       (S (our_compile_options @ our_include_options));
  flag ["ocaml"; "compile"; "ourbytecompilesettings"]
       (S (our_byte_compile_options));
  flag ["ocaml"; "compile"; "ournativecompilesettings"]
       (S (our_native_compile_options));
  flag ["ocaml"; "pp"; "ourppsettings"]
       (S our_pp_options);
  flag ["ocaml"; "link"; "ourbytelinksettings"]
       (S (our_compile_options @ our_byte_link_options));
  flag ["ocaml"; "link"; "ournativelinksettings"]
       (S (our_compile_options @ our_native_link_options));
  flag ["ocaml"; "doc"; "ourocamldocsettings"]
       (S ([A "-keep-code"; A "-colorize-code"] @ our_include_options));
  flag ["ocaml"; "link"; "ourcmodules"]
       (S our_c_modules);
  | _ -> ());;
